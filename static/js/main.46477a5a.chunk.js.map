{"version":3,"sources":["UserInput.js","Gist.js","Panel.js","Main.js","index.js"],"names":["messages","UserInput","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","username","style","width","timeout","handleChange","bind","assertThisInitialized","fetchInfo","client","request","query","data","parent","setState","nodes","user","gists","message","length","e","target","value","clearTimeout","setTimeout","concat","Math","max","react_default","a","createElement","type","placeholder","onChange","autoComplete","autoCorrect","autoCapitalize","spellCheck","React","Component","Gist","className","onClick","window","open","name","fontSize","description","Panel","map","g","i","Gist_Gist","key","Fragment","Main","UserInput_UserInput","Panel_Panel","GraphQLClient","headers","Authorization","DOM","render","Main_Main","document","querySelector"],"mappings":"gRAEMA,EACQ,6BADRA,EAEO,mCAFPA,EAGI,0BAGWC,cACjB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAEDQ,MAAQ,CACTC,SAAU,GACVC,MAAO,CACHC,MAAO,YAIfV,EAAKW,QAAU,KAEfX,EAAKY,aAAeZ,EAAKY,aAAaC,KAAlBZ,OAAAa,EAAA,EAAAb,QAAAa,EAAA,EAAAb,CAAAD,KACpBA,EAAKe,UAAYf,EAAKe,UAAUF,KAAfZ,OAAAa,EAAA,EAAAb,QAAAa,EAAA,EAAAb,CAAAD,KAbFA,2MAkBHQ,EAAaL,KAAKI,MAAlBC,kBACWL,KAAKJ,MAAMiB,OAAOC,QAAQd,KAAKJ,MAAMmB,MAAO,CAAEV,uBAA3DW,SACHhB,KAAKI,MAAMC,WAAaA,mDAC3BL,KAAKJ,MAAMqB,OAAOC,SAAS,WAAM,IACrBC,EAAUH,EAAKI,KAAKC,MAApBF,MACR,MAAO,CACHE,MAAOF,EACPG,QAASH,EAAMI,OAAS7B,EAAgBA,uDAKhDM,KAAKJ,MAAMqB,OAAOC,SAAS,WACvB,MAAO,CACHG,MAAO,GACPC,QAAS5B,sJAMZ8B,GAET,IAAMnB,EAAWmB,EAAEC,OAAOC,MAC1BC,aAAa3B,KAAKQ,SAClBR,KAAKQ,QAAUoB,WAAW5B,KAAKY,UAAW,KAC1CZ,KAAKkB,SAAS,WACV,MAAO,CACHb,WACAC,MAAO,CACHC,MAAK,GAAAsB,OAAoC,IAA/BC,KAAKC,IAAI1B,EAASkB,OAAQ,GAA/B,4CAajB,OACIS,EAAAC,EAAAC,cAAA,QAAMT,OAAO,UACTO,EAAAC,EAAAC,cAAA,SAAOC,KAAK,OAAOC,YAAY,SAASC,SAAWrC,KAAKS,aAAeH,MAAQN,KAAKI,MAAME,MAAOgC,aAAa,MAAMC,YAAY,MAAMC,eAAe,MAAMC,WAAW,kBAhE/IC,IAAMC,WCNxBC,mLACR,IAAA/C,EAAAG,KACL,OACIgC,EAAAC,EAAAC,cAAA,OAAKW,UAAU,MAAMC,QAAU,kBAAMC,OAAOC,KAAP,2BAAAnB,OAAuChC,EAAKD,MAAMqD,MAAQ,YAC3FjB,EAAAC,EAAAC,cAAA,MAAI5B,MAAQ,CAAE4C,SAAU,WAAxB,IAAwClD,KAAKJ,MAAMqD,KAAnD,KACAjB,EAAAC,EAAAC,cAAA,MAAI5B,MAAQ,CAAE4C,SAAU,SAAxB,IAAsClD,KAAKJ,MAAMuD,YAAjD,aALkBT,IAAMC,WCCnBS,mLAEb,IAAM/B,EAAQrB,KAAKJ,MAAMqB,OAAOb,MAAMiB,MAAMgC,IAAI,SAACC,EAAGC,GAAJ,OAC5CvB,EAAAC,EAAAC,cAACsB,EAAD,CAAMC,IAAMF,EAAIN,KAAOK,EAAEL,KAAOE,YAAcG,EAAEH,gBAEpD,OACInB,EAAAC,EAAAC,cAACF,EAAAC,EAAMyB,SAAP,KACI1B,EAAAC,EAAAC,cAAA,MAAIW,UAAU,WAAd,IAA2B7C,KAAKJ,MAAMqB,OAAOb,MAAMkB,QAAnD,KACAU,EAAAC,EAAAC,cAAA,WACEb,UATiBqB,IAAMC,WCCpBgB,cACjB,SAAAA,EAAY/D,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA2D,IACf9D,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA6D,GAAAxD,KAAAH,KAAMJ,KAEDQ,MAAQ,CACTiB,MAAO,GACPC,QAAS,IALEzB,wEAUf,OACImC,EAAAC,EAAAC,cAACF,EAAAC,EAAMyB,SAAP,KACI1B,EAAAC,EAAAC,cAAA,MAAIW,UAAU,SAAd,OACQb,EAAAC,EAAAC,cAAC0B,EAAD,CAAW/C,OAASb,KAAKJ,MAAMiB,OAASE,MAAQf,KAAKJ,MAAMmB,MAAQE,OAASjB,OADpF,mBAGAgC,EAAAC,EAAAC,cAAC2B,EAAD,CAAO5C,OAASjB,eAhBE0C,IAAMC,WCkBlC9B,EAAS,IAAIiD,gBAhBE,iCAgB0B,CAC3CC,QAAS,CACLC,cAAe,qDAIvBC,IAAIC,OAAOlC,EAAAC,EAAAC,cAACiC,EAAD,CAAMtD,OAASA,EAASE,MAnBxB,kQAmB2CqD,SAASC,cAAc","file":"static/js/main.46477a5a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst messages = {\r\n    notFound: 'couldn\\'t find that user :(',\r\n    noGists: 'that user has no public gists :/',\r\n    okay: 'showing latest 20 gists'\r\n}\r\n\r\nexport default class UserInput extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: '',\r\n            style: {\r\n                width: '10.8rem'\r\n            }\r\n        }\r\n\r\n        this.timeout = null;\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.fetchInfo = this.fetchInfo.bind(this);\r\n    }\r\n\r\n    async fetchInfo() {\r\n        try {\r\n            const { username } = this.state;\r\n            const data = await this.props.client.request(this.props.query, { username });\r\n            if(this.state.username !== username) return; // Handle overwrites\r\n            this.props.parent.setState(() => {\r\n                const { nodes } = data.user.gists;\r\n                return { \r\n                    gists: nodes,\r\n                    message: nodes.length ? messages.okay : messages.noGists\r\n                };\r\n            })\r\n        } catch(err) {\r\n            // console.error(err.stack);\r\n            this.props.parent.setState(() => {\r\n                return { \r\n                    gists: [], \r\n                    message: messages.notFound \r\n                };\r\n            })\r\n        }\r\n    }\r\n\r\n    handleChange(e) {\r\n        // e.persist();\r\n        const username = e.target.value;\r\n        clearTimeout(this.timeout);\r\n        this.timeout = setTimeout(this.fetchInfo, 200);\r\n        this.setState(() => {\r\n            return { \r\n                username,  \r\n                style: {\r\n                    width: `${Math.max(username.length, 6) * 1.8}rem`\r\n                }\r\n            };\r\n        })\r\n    }\r\n\r\n    /*\r\n    componentDidMount() {\r\n        console.log('Test 1');\r\n    }\r\n    */\r\n\r\n    render() {\r\n        return (\r\n            <form target=\"_blank\">\r\n                <input type=\"text\" placeholder=\"RuyiLi\" onChange={ this.handleChange } style={ this.state.style }autoComplete=\"off\" autoCorrect=\"off\" autoCapitalize=\"off\" spellCheck=\"false\"/>\r\n            </form>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nexport default class Gist extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"box\" onClick={ () => window.open(`https://gist.github.com/${this.props.name}`, '_blank') }>\r\n                <h1 style={ { fontSize: '1.3rem' } }> { this.props.name } </h1>\r\n                <h2 style={ { fontSize: '1rem' } }> { this.props.description } </h2>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport Gist from './Gist.js';\r\n\r\nexport default class Panel extends React.Component {\r\n    render() {\r\n        const gists = this.props.parent.state.gists.map((g, i) => \r\n            <Gist key={ i } name={ g.name } description={ g.description }/>\r\n        )\r\n        return (\r\n            <React.Fragment>\r\n                <h2 className=\"message\"> { this.props.parent.state.message } </h2>\r\n                <hr/>\r\n                { gists }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport UserInput from './UserInput.js';\r\nimport Panel from './Panel.js';\r\n\r\nexport default class Main extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            gists: [],\r\n            message: ''\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <h1 className=\"title\"> \r\n                    see <UserInput client={ this.props.client } query={ this.props.query } parent={ this }/>'s public gists\r\n                </h1>\r\n                <Panel parent={ this }/>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport DOM from 'react-dom';\r\nimport { GraphQLClient } from 'graphql-request';\r\nimport './index.css';\r\nimport Main from './Main.js';\r\n\r\nconst API_ENDPOINT = 'https://api.github.com/graphql';\r\nconst OAUTH_ACCESS_TOKEN = '95291aeffac9bf51bf97583be58fb2dfad289a6a';\r\n\r\nconst query = `\r\n    query($username:String!) {\r\n        user(login: $username) {\r\n            gists(first: 20, privacy: PUBLIC) {\r\n                nodes {\r\n                    name\r\n                    description\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst client = new GraphQLClient(API_ENDPOINT, {\r\n    headers: {\r\n        Authorization: 'Bearer ' + OAUTH_ACCESS_TOKEN\r\n    }\r\n});\r\n\r\nDOM.render(<Main client={ client } query={ query }/>, document.querySelector('#root'));"],"sourceRoot":""}